// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountAlbumViews(ctx context.Context) (int64, error)
	CountAlbumViewsByAlbum(ctx context.Context, albumID int64) (int64, error)
	CountAlbumViewsByAlbumAndDateRange(ctx context.Context, arg CountAlbumViewsByAlbumAndDateRangeParams) (int64, error)
	CountAlbums(ctx context.Context) (int64, error)
	CountAlbumsByEvent(ctx context.Context, eventID int64) (int64, error)
	CountAlbumsByUser(ctx context.Context, createdByUserID pgtype.Int8) (int64, error)
	CountEventViews(ctx context.Context) (int64, error)
	CountEventViewsByEvent(ctx context.Context, eventID int64) (int64, error)
	CountEventViewsByEventAndDateRange(ctx context.Context, arg CountEventViewsByEventAndDateRangeParams) (int64, error)
	CountEvents(ctx context.Context) (int64, error)
	CountEventsByUser(ctx context.Context, createdByUserID pgtype.Int8) (int64, error)
	CountMedia(ctx context.Context) (int64, error)
	CountMediaByAlbum(ctx context.Context, albumID int64) (int64, error)
	CountMediaByAlbumAndType(ctx context.Context, arg CountMediaByAlbumAndTypeParams) (int64, error)
	CountMediaVariants(ctx context.Context) (int64, error)
	CountMediaVariantsByMedia(ctx context.Context, mediaID int64) (int64, error)
	CountTenants(ctx context.Context) (int64, error)
	CountUniqueIPsByAlbum(ctx context.Context, albumID int64) (int64, error)
	CountUniqueIPsByEvent(ctx context.Context, eventID int64) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateAlbum(ctx context.Context, arg CreateAlbumParams) (Album, error)
	CreateAlbumView(ctx context.Context, arg CreateAlbumViewParams) (AlbumView, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error)
	CreateEventView(ctx context.Context, arg CreateEventViewParams) (EventView, error)
	CreateMedia(ctx context.Context, arg CreateMediaParams) (Medium, error)
	CreateMediaVariant(ctx context.Context, arg CreateMediaVariantParams) (MediaVariant, error)
	CreateTenant(ctx context.Context, arg CreateTenantParams) (Tenant, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAlbum(ctx context.Context, id int64) error
	DeleteAlbumView(ctx context.Context, id int64) error
	DeleteAlbumViewsByAlbum(ctx context.Context, albumID int64) error
	DeleteEvent(ctx context.Context, id int64) error
	DeleteEventView(ctx context.Context, id int64) error
	DeleteEventViewsByEvent(ctx context.Context, eventID int64) error
	DeleteMedia(ctx context.Context, id int64) error
	DeleteMediaByAlbum(ctx context.Context, albumID int64) error
	DeleteMediaVariant(ctx context.Context, id int64) error
	DeleteMediaVariantsByMedia(ctx context.Context, mediaID int64) error
	DeleteMediaVariantsByMediaAndType(ctx context.Context, arg DeleteMediaVariantsByMediaAndTypeParams) error
	DeleteTenant(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetAlbumByID(ctx context.Context, id int64) (Album, error)
	GetAlbumByShareUUID(ctx context.Context, shareUuid pgtype.Text) (Album, error)
	GetAlbumViewByID(ctx context.Context, id int64) (AlbumView, error)
	GetAlbumViewsGroupedByDay(ctx context.Context, arg GetAlbumViewsGroupedByDayParams) ([]GetAlbumViewsGroupedByDayRow, error)
	GetEventByID(ctx context.Context, id int64) (Event, error)
	GetEventByShareUUID(ctx context.Context, shareUuid pgtype.Text) (Event, error)
	GetEventViewByID(ctx context.Context, id int64) (EventView, error)
	GetEventViewsGroupedByDay(ctx context.Context, arg GetEventViewsGroupedByDayParams) ([]GetEventViewsGroupedByDayRow, error)
	GetMediaByID(ctx context.Context, id int64) (Medium, error)
	GetMediaTypeStats(ctx context.Context, albumID int64) ([]GetMediaTypeStatsRow, error)
	GetMediaVariantByID(ctx context.Context, id int64) (MediaVariant, error)
	GetMediaVariantByMediaAndType(ctx context.Context, arg GetMediaVariantByMediaAndTypeParams) (MediaVariant, error)
	GetTenantByClerkOrgID(ctx context.Context, clerkOrgID string) (Tenant, error)
	GetTenantByID(ctx context.Context, id int64) (Tenant, error)
	GetTopAlbumsByViews(ctx context.Context, limit int32) ([]GetTopAlbumsByViewsRow, error)
	GetTopEventsByViews(ctx context.Context, limit int32) ([]GetTopEventsByViewsRow, error)
	GetTotalMediaSizeByAlbum(ctx context.Context, albumID int64) (interface{}, error)
	GetTotalVariantsSizeByMedia(ctx context.Context, mediaID int64) (interface{}, error)
	GetUserByClerkUserID(ctx context.Context, clerkUserID string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	GetVariantTypeStats(ctx context.Context) ([]GetVariantTypeStatsRow, error)
	ListAlbumViews(ctx context.Context, arg ListAlbumViewsParams) ([]AlbumView, error)
	ListAlbumViewsByAlbum(ctx context.Context, arg ListAlbumViewsByAlbumParams) ([]AlbumView, error)
	ListAlbumViewsByAlbumAndDateRange(ctx context.Context, arg ListAlbumViewsByAlbumAndDateRangeParams) ([]AlbumView, error)
	ListAlbumViewsByIP(ctx context.Context, arg ListAlbumViewsByIPParams) ([]AlbumView, error)
	ListAlbums(ctx context.Context, arg ListAlbumsParams) ([]Album, error)
	ListAlbumsByEvent(ctx context.Context, arg ListAlbumsByEventParams) ([]Album, error)
	ListAlbumsByUser(ctx context.Context, arg ListAlbumsByUserParams) ([]Album, error)
	ListEventViews(ctx context.Context, arg ListEventViewsParams) ([]EventView, error)
	ListEventViewsByEvent(ctx context.Context, arg ListEventViewsByEventParams) ([]EventView, error)
	ListEventViewsByEventAndDateRange(ctx context.Context, arg ListEventViewsByEventAndDateRangeParams) ([]EventView, error)
	ListEventViewsByIP(ctx context.Context, arg ListEventViewsByIPParams) ([]EventView, error)
	ListEvents(ctx context.Context, arg ListEventsParams) ([]Event, error)
	ListEventsByUser(ctx context.Context, arg ListEventsByUserParams) ([]Event, error)
	ListMedia(ctx context.Context, arg ListMediaParams) ([]Medium, error)
	ListMediaByAlbum(ctx context.Context, arg ListMediaByAlbumParams) ([]Medium, error)
	ListMediaByAlbumAndType(ctx context.Context, arg ListMediaByAlbumAndTypeParams) ([]Medium, error)
	ListMediaVariantsByMedia(ctx context.Context, mediaID int64) ([]MediaVariant, error)
	ListMediaVariantsByType(ctx context.Context, arg ListMediaVariantsByTypeParams) ([]MediaVariant, error)
	ListPublicAlbumsByEvent(ctx context.Context, arg ListPublicAlbumsByEventParams) ([]Album, error)
	ListTenants(ctx context.Context, arg ListTenantsParams) ([]Tenant, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	SearchAlbumsByEvent(ctx context.Context, arg SearchAlbumsByEventParams) ([]Album, error)
	SearchEvents(ctx context.Context, arg SearchEventsParams) ([]Event, error)
	UpdateAlbum(ctx context.Context, arg UpdateAlbumParams) (Album, error)
	UpdateEvent(ctx context.Context, arg UpdateEventParams) (Event, error)
	UpdateMedia(ctx context.Context, arg UpdateMediaParams) (Medium, error)
	UpdateTenant(ctx context.Context, arg UpdateTenantParams) (Tenant, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
